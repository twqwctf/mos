VPas Version 1.05 [30-Jan-89]


 0    1: {$X+}
 0    2: unit dirlsunit;
 0    3: 
 0    4: (******************************************************************************
 0    5: 
 0    6:  unit dirlsunit
 0    7:  contents: this unit is responsible for retrieving a new dir or pwd to the
 0    8:            dir. 
 0    9: 
 0   10:  ******************************************************************************)
 0   11: 
 0   12: interface
 0   13: 
 0   14:    const string256size=256;
 0   15:          string20size=20;
 0   16: 
 0   17:    type
 0   18:       string20=packed array[1..string20size] of char;
 0   19:       string256=packed array[1..string256size] of char;
 0   20:       pathtype=array[1..2] of string256;
 0   21:    var
 0   22:       syscom:string20;
 0   23:       path:pathtype;         (* the array variable for a path *)
 0   24:       lsfvar,pwdfvar:text;   (* output files *)
 0   25: 
 0   26: 
 0   27: function system(var syscom:string256):integer;
 0   28: 
 0   29: (* C ext. lanf. fnc. to call UNIX sys. routines *)
 0   30:    cexternal;     
 0   31: 
 0   32: procedure append(var str256:string256;
 0   33:                  var str20:string20;
 0   34:                  len256:integer);
 0   35: procedure pwd(var pwdfvar:text;
 0   36:               var apath:string256);
 0   37: procedure ls(var apath:string256);
 0   38: procedure listls(var lsfvar:text);
 0   39: procedure callprint(var apath:string256);
 0   40: function pathsize(apath:string256):integer;
 0   41: function samepath(firstpath,secondpath:string256):boolean;
 0   42: 
 0   43: implementation
 0   44: 
 0   45: 
 0   46: procedure append;
 0   47: 
VPas Version 1.05 [30-Jan-89]


 0   48: (********************************************************************************
 0   49: 
 0   50:  Procedure append
 0   51:  Purpose:  concats str20 onto end of str 256 at index len256 
 0   52: 
 0   53:  Parameters: str256, str20, len256
 0   54:  Called by: ls, getnewpath
 0   55:  Calls: none
 0   56: 
 0   57:  ********************************************************************************)
 0   58: 
 0   59: var
 0   60:    chr0:char;       (* init nill char *)
 0   61:    i:integer;
 0   62: 
 0   63:    begin
 1   64:    chr0:=chr(0);
 1   65:    i:=0;
 1   66:    repeat
 1   67:       i:=i+1;
 1   68:       str256[len256+i-1]:=str20[i];
 1   69:    until (i=20) or (str20[i]=chr0);
 1   70:    end;
 0   71:                         (*-------------------------------------------------*)
 0   72: 
 0   73: procedure pwd;
 0   74: 
 0   75: (********************************************************************************
 0   76: 
 0   77:  Procedure pwd
 0   78:  Purpose: This procedure directs the path to the working directory to /tmp/pwd.out.
 0   79:  
 0   80:  Parameters :pwdfvar, apath
 0   81:  Called by: callprint
 0   82:  Calls: system
 0   83: 
 0   84:  *********************************************************************************)
 0   85: 
 0   86: var
 0   87:    i:integer;
 0   88:    ch:char;
 0   89:    syscom:string20;
 0   90:    syscom256:string256;
 0   91: 
 0   92:    begin
 1   93: 
 1   94:    (* set sys. com. to call, redirect pwd output *)
VPas Version 1.05 [30-Jan-89]


 1   95:  
 1   96:    syscom:='pwd> /tmp/pwd.out   ';
 1   97:    syscom[20]:=chr(0);      (* end of string for C lang. fcn. *)
 1   98:    append(syscom256,syscom,1);
 1   99:    i:=system(syscom256);       (* calls pwd *)
 1  100: 
 1  101:    i:=0;
 1  102:    reset(pwdfvar,'/tmp/pwd.out');
 1  103:    while (not (eof(pwdfvar))) do
 1  104:       begin
 2  105:       if (eoln(pwdfvar))
 2  106:          then
 2  107:          read(pwdfvar,ch)
 2  108:          else
 2  109:          begin
 3  110:          read(pwdfvar,ch);
 3  111:          i:=i+1;
 3  112:          apath[i]:=ch;
 3  113:          end;
 2  114:       end;
 1  115:    i:=i+1;
 1  116:    apath[i]:=chr(0);
 1  117:    close(pwdfvar);
 1  118:    end;  (* pwd *)
 0  119:                         (*--------------------------------------------------*)
 0  120: 
 0  121: procedure ls;
 0  122: 
 0  123: (********************************************************************************
 0  124: 
 0  125:  Procedure ls
 0  126:  Purpose: This procedure directs the directory listing to /tmp/ls.out
 0  127:  
 0  128:  Parameters: apath
 0  129:  Called by: callprint, getcom
 0  130:  Calls: append, system
 0  131: 
 0  132:  ********************************************************************************)
 0  133: 
 0  134:    var
 0  135:       syscom:string256;
 0  136:       sys20:string20;
 0  137:       comdex,i,count:integer;
 0  138:       chr0:char;
 0  139: 
 0  140:    begin
 1  141:    chr0:=chr(0);
VPas Version 1.05 [30-Jan-89]


 1  142: 
 1  143:    (* set syscom:='ls -al '+path+'>/tmp/ls.out' *)
 1  144: 
 1  145:    syscom[1]:='l';
 1  146:    syscom[2]:='s';
 1  147:    syscom[3]:=' ';
 1  148:    syscom[4]:='-';
 1  149:    syscom[5]:='a';
 1  150:    syscom[6]:='l';
 1  151:    syscom[7]:=' ';
 1  152:    comdex:=7;
 1  153: 
 1  154:    i:=0;
 1  155:    count:=0;
 1  156:    repeat
 1  157:       i:=i+1;
 1  158:       comdex:=comdex+1;
 1  159:       syscom[comdex]:=apath[i];
 1  160:       until apath[i]=chr0;       (* end of string *) 
 1  161: 
 1  162:    sys20:='> /tmp/ls.out       ';
 1  163:    sys20[15]:=chr0;
 1  164:    append(syscom,sys20,comdex);
 1  165: 
 1  166:    (* call ls fcn *)
 1  167: 
 1  168:    i:=system(syscom);  
 1  169:    end; (* ls *)
 0  170:                          (*--------------------------------------------------*)
 0  171: 
 0  172: procedure listls;
 0  173: 
 0  174: (**********************************************************************************
 0  175: 
 0  176:  Procedure listls
 0  177:  Purpose: This procedure reads the input line by line from /tmp/ls.out
 0  178: 
 0  179:  Parameters: none
 0  180:  Called by: getnewpath, getcom
 0  181:  Calls: none
 0  182:  
 0  183:  **********************************************************************************)
 0  184: 
 0  185: var
 0  186:    lsline:packed array[1..80] of char;
 0  187:    ch,ch2,ch3,ch4,ch5:char;
 0  188: 
VPas Version 1.05 [30-Jan-89]


 0  189: begin
 1  190:    reset(lsfvar,'/tmp/ls.out');
 1  191:    readln(lsfvar);
 1  192:    while (not (eof(lsfvar))) do
 1  193:       begin
 2  194:       readln(lsfvar,lsline);
 2  195:       end;
 1  196: end;   (* listls *)
 0  197:                          (*-------------------------------------------*)
 0  198: 
 0  199: procedure callprint;
 0  200: 
 0  201: (********************************************************************************
 0  202: 
 0  203:  Procedure callprint
 0  204:  Purpose: called by the main program, mos, to call ls and pwd firstly
 0  205: 
 0  206:  Parameters: apath
 0  207:  Called by: main- mos
 0  208:  Calls: pwd, ls
 0  209: 
 0  210:  ********************************************************************************)
 0  211: 
 0  212: begin 
 1  213:    pwd(pwdfvar,apath);
 1  214:    ls(apath);
 1  215: end;   (* callprint *)
 0  216: 
 0  217: 
 0  218: function pathsize;
 0  219: 
 0  220: (********************************************************************************
 0  221:  
 0  222:  Function pathsize
 0  223:  Purpose: This function accepts a path and returns its size (# of chars)   
 0  224: 
 0  225:  Parameters: apath
 0  226:  Called by: samepath, addpathname, adjustpath, printpath, copy, move, rename
 0  227:  Calls: none
 0  228: 
 0  229:  ********************************************************************************) 
 0  230:  
 0  231: var i:integer;
 0  232:     chr0:char;
 0  233:    begin
 1  234:    chr0:=chr(0);
 1  235:    i:=0;
VPas Version 1.05 [30-Jan-89]


 1  236:    repeat
 1  237:       i:=i+1;
 1  238:    until(apath[i]=chr0) or (i=string256size);
 1  239:    pathsize:=i-1;
 1  240:    end;
 0  241: 
 0  242: function samepath;
 0  243: 
 0  244: (********************************************************************************
 0  245: 
 0  246:  Function samepath
 0  247:  Purpose: This function determines whether or not the two passed in paths are
 0  248:           the same and returns the appropriate boolean
 0  249: 
 0  250:  Parameters: firstpath and secondpath
 0  251:  Called by: getcom   
 0  252:  Calls: pathsize
 0  253: 
 0  254:  ********************************************************************************)
 0  255: 
 0  256: var i:integer;
 0  257:    begin
 1  258:    samepath:=FALSE;
 1  259:    if (pathsize(firstpath)=pathsize(secondpath))
 1  260:       then
 1  261:       for i:=1 to pathsize(firstpath) do
 1  262:          samepath:=firstpath[i]=secondpath[i];
 1  263:    end;
 0  264: 
 0  265: 
 0  266: 
 0  267: begin
 1  268: end.  (* unit dirlsunit *)
 0  269: 
 0  270: 
 0  271: 
VPas Version 1.05 [30-Jan-89]


Procedures and functions

     APPEND (procedure) 32, 63
     CALLPRINT (procedure) 39, 212
     LISTLS (procedure) 38, 189
     LS (procedure) 37, 140
     PATHSIZE (function) 40, 233
     PWD (procedure) 35, 92
     SAMEPATH (function) 41, 257
